<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Omnifactotum.Wpf</name>
    </assembly>
    <members>
        <member name="T:Omnifactotum.Wpf.Converters.BooleanToBrushConverter">
            <summary>
                Converts between <see cref="T:System.Boolean"/> and <see cref="T:System.Windows.Media.Brush"/>.
            </summary>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.BooleanToFontWeightConverter">
            <summary>
                Converts between <see cref="T:System.Boolean"/> and <see cref="T:System.Windows.FontWeight"/>.
            </summary>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1">
            <summary>
                Converts between <see cref="T:System.Boolean"/> and the type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">
                The type to convert to and from <see cref="T:System.Boolean"/>.
            </typeparam>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1"/> class.
            </summary>
        </member>
        <member name="P:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1.TrueValue">
            <summary>
                Gets or sets the value of the type <typeparamref name="T"/> which corresponds to <c>true</c>.
            </summary>
        </member>
        <member name="P:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1.FalseValue">
            <summary>
                Gets or sets the value of the type <typeparamref name="T"/> which corresponds to <c>false</c>.
            </summary>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
                Converts a value produced by the binding source to the type of the binding target property.
            </summary>
            <param name="value">
                The value produced by the binding source.
            </param>
            <param name="targetType">
                The type of the binding target property.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value. If the method returns <c>null</c>, the valid <c>null</c> value is used.
            </returns>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.BooleanToValueConverter`1.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
                Converts a value produced by the binding target to the type of the binding source property.
            </summary>
            <param name="value">
                The value that is produced by the binding target.
            </param>
            <param name="targetType">
                The type to convert to.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value. If the method returns <c>null</c>, the valid <c>null</c> value is used.
            </returns>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.BooleanToVisibilityConverter">
            <summary>
                Converts between <see cref="T:System.Boolean"/> and <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.BooleanToVisibilityConverter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Omnifactotum.Wpf.Converters.BooleanToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1">
            <summary>
                Converts between nullable <see cref="T:System.Boolean"/> and the type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">
                The type to convert to and from nullable <see cref="T:System.Boolean"/>.
            </typeparam>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1"/> class.
            </summary>
        </member>
        <member name="P:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1.TrueValue">
            <summary>
                Gets or sets the value of the type <typeparamref name="T"/> which corresponds to <c>true</c>.
            </summary>
        </member>
        <member name="P:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1.FalseValue">
            <summary>
                Gets or sets the value of the type <typeparamref name="T"/> which corresponds to <c>false</c>.
            </summary>
        </member>
        <member name="P:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1.NullValue">
            <summary>
                Gets or sets the value of the type <typeparamref name="T"/> which corresponds to <c>null</c>.
            </summary>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
                Converts a value produced by the binding source to the type of the binding target property.
            </summary>
            <param name="value">
                The value produced by the binding source.
            </param>
            <param name="targetType">
                The type of the binding target property.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value. If the method returns <c>null</c>, the valid <c>null</c> value is used.
            </returns>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.NullableBooleanToValueConverter`1.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
                Converts a value produced by the binding target to the type of the binding source property.
            </summary>
            <param name="value">
                The value that is produced by the binding target.
            </param>
            <param name="targetType">
                The type to convert to.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value. If the method returns <c>null</c>, the valid <c>null</c> value is used.
            </returns>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.NullableBooleanToVisibilityConverter">
            <summary>
                Converts between nullable <see cref="T:System.Boolean"/> and <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.NullableBooleanToVisibilityConverter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Omnifactotum.Wpf.Converters.NullableBooleanToVisibilityConverter"/> class.
            </summary>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.RelayConversionHandler">
            <summary>
                Encapsulated the conversion method for <see cref="T:Omnifactotum.Wpf.Converters.RelayValueConverter"/>.
            </summary>
            <param name="value">
                The value produced by the binding source.
            </param>
            <param name="targetType">
                The type of the binding target property.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value.
            </returns>
        </member>
        <member name="T:Omnifactotum.Wpf.Converters.RelayValueConverter">
            <summary>
                Converts between two types using the assigned conversion handlers.
            </summary>
        </member>
        <member name="E:Omnifactotum.Wpf.Converters.RelayValueConverter.ConvertForward">
            <summary>
                Occurs when a value produced by the binding source needs to be converted to the type
                of the binding target property.
            </summary>
        </member>
        <member name="E:Omnifactotum.Wpf.Converters.RelayValueConverter.ConvertBackward">
            <summary>
                Occurs when a value produced by the binding target needs to be converted to the type
                of the binding source property.
            </summary>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.RelayValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
                Converts a value produced by the binding source to the type of the binding target property.
            </summary>
            <param name="value">
                The value produced by the binding source.
            </param>
            <param name="targetType">
                The type of the binding target property.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value. If the method returns <c>null</c>, the valid <c>null</c> value is used.
            </returns>
        </member>
        <member name="M:Omnifactotum.Wpf.Converters.RelayValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
                Converts a value produced by the binding target to the type of the binding source property.
            </summary>
            <param name="value">
                The value that is produced by the binding target.
            </param>
            <param name="targetType">
                The type of the binding source property.
            </param>
            <param name="parameter">
                The converter parameter to use.
            </param>
            <param name="culture">
                The culture to use in the converter.
            </param>
            <returns>
                A converted value.
            </returns>
        </member>
        <member name="T:Omnifactotum.Wpf.WindowStyles">
            <summary>
            Contains the attached properties allowing to specify extra styles for <see cref="T:System.Windows.Window" />.
            </summary>
        </member>
        <member name="F:Omnifactotum.Wpf.WindowStyles.CanMinimizeProperty">
            <summary>
                The identifier for the <see cref="P:WindowStyles.CanMinimize"/> attached property.
            </summary>
        </member>
        <member name="F:Omnifactotum.Wpf.WindowStyles.CanMaximizeProperty">
            <summary>
                The identifier for the <see cref="P:WindowStyles.CanMaximize"/> attached property.
            </summary>
        </member>
        <member name="F:Omnifactotum.Wpf.WindowStyles.HasSystemMenuProperty">
            <summary>
                The identifier for the <see cref="P:WindowStyles.HasSystemMenu"/> attached property.
            </summary>
        </member>
        <member name="M:Omnifactotum.Wpf.WindowStyles.GetCanMinimize(System.Windows.Window)">
            <summary>
                Gets the value of the <see cref="P:WindowStyles.CanMinimize"/> attached property
                from the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">
                The window from which to read the property value.
            </param>
            <returns>
                The value of the <see cref="P:WindowStyles.CanMinimize"/> attached property.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="window"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WindowStyles.SetCanMinimize(System.Windows.Window,System.Boolean)">
            <summary>
                Sets the value of the <see cref="P:WindowStyles.CanMinimize"/> attached property to
                the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">
                The window on which to set the <see cref="P:WindowStyles.CanMinimize"/> attached property.
            </param>
            <param name="value">
                The property value to set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="window"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WindowStyles.GetCanMaximize(System.Windows.Window)">
            <summary>
                Gets the value of the <see cref="P:WindowStyles.CanMaximize"/> attached property
                from the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">
                The window from which to read the property value.
            </param>
            <returns>
                The value of the <see cref="P:WindowStyles.CanMaximize"/> attached property.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="window"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WindowStyles.SetCanMaximize(System.Windows.Window,System.Boolean)">
            <summary>
                Sets the value of the <see cref="P:WindowStyles.CanMaximize"/> attached property to
                the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">
                The window on which to set the <see cref="P:WindowStyles.CanMaximize"/> attached property.
            </param>
            <param name="value">
                The property value to set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="window"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WindowStyles.GetHasSystemMenu(System.Windows.Window)">
            <summary>
                Gets the value of the <see cref="P:WindowStyles.HasSystemMenu"/> attached property
                from the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">
                The window from which to read the property value.
            </param>
            <returns>
                The value of the <see cref="P:WindowStyles.HasSystemMenu"/> attached property.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="window"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WindowStyles.SetHasSystemMenu(System.Windows.Window,System.Boolean)">
            <summary>
                Sets the value of the <see cref="P:WindowStyles.HasSystemMenu"/> attached property to
                the specified <see cref="T:System.Windows.Window"/>.
            </summary>
            <param name="window">
                The window on which to set the <see cref="P:WindowStyles.HasSystemMenu"/> attached property.
            </param>
            <param name="value">
                The property value to set.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="window"/> is <c>null</c>.
            </exception>
        </member>
        <member name="T:Omnifactotum.Wpf.WpfFactotum">
            <summary>
                Provides helper methods for use in WPF projects.
            </summary>
        </member>
        <member name="T:Omnifactotum.Wpf.WpfFactotum.For`1">
            <summary>
                Provides a convenient access to helper methods for the specified type.
            </summary>
            <typeparam name="TObject">
                The type that the helper methods are provided for.
            </typeparam>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
            <summary>
                Registers a dependency property using the specified property expression defining
                the property information and using the specified property metadata and the value
                validation callback for the property.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <param name="propertyMetadata">
                The property metadata for the dependency property, or <c>null</c> if not specified.
            </param>
            <param name="validateValueCallback">
                The validate value callback, or <c>null</c> if not specified.
            </param>
            <returns>
                A dependency property identifier used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
                <para>-or-</para>
                <para><paramref name="propertyMetadata"/> is not valid.</para>
                <para>-or-</para>
                <para>
                    <paramref name="validateValueCallback"/> invalidated the default value
                    specified by <paramref name="propertyMetadata"/>.
                </para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Windows.PropertyMetadata)">
            <summary>
                Registers a dependency property using the specified property expression defining
                the property information and using the specified property metadata.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <param name="propertyMetadata">
                The property metadata for the dependency property, or <c>null</c> if not specified.
            </param>
            <returns>
                A dependency property identifier used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
                <para>-or-</para>
                <para><paramref name="propertyMetadata"/> is not valid.</para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Windows.ValidateValueCallback)">
            <summary>
                Registers a dependency property using the specified property expression defining
                the property information and using the specified value validation callback for
                the property.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <param name="validateValueCallback">
                The validate value callback, or <c>null</c> if not specified.
            </param>
            <returns>
                A dependency property identifier used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Registers a dependency property using the specified property expression defining
                the property information.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <returns>
                A dependency property identifier used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterReadOnlyDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
            <summary>
                Registers a read-only dependency property using the specified property expression defining
                the property information and using the specified property metadata and the value
                validation callback for the property.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <param name="propertyMetadata">
                The property metadata for the dependency property, or <c>null</c> if not specified.
            </param>
            <param name="validateValueCallback">
                The validate value callback, or <c>null</c> if not specified.
            </param>
            <returns>
                A dependency property key used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
                <para>-or-</para>
                <para><paramref name="propertyMetadata"/> is not valid.</para>
                <para>-or-</para>
                <para>
                    <paramref name="validateValueCallback"/> invalidated the default value
                    specified by <paramref name="propertyMetadata"/>.
                </para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterReadOnlyDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Windows.PropertyMetadata)">
            <summary>
                Registers a read-only dependency property using the specified property expression defining
                the property information and using the specified property metadata.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <param name="propertyMetadata">
                The property metadata for the dependency property, or <c>null</c> if not specified.
            </param>
            <returns>
                A dependency property key used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
                <para>-or-</para>
                <para><paramref name="propertyMetadata"/> is not valid.</para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterReadOnlyDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Windows.ValidateValueCallback)">
            <summary>
                Registers a read-only dependency property using the specified property expression defining
                the property information and using the value validation callback for the property.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <param name="validateValueCallback">
                The validate value callback, or <c>null</c> if not specified.
            </param>
            <returns>
                A dependency property key used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.For`1.RegisterReadOnlyDependencyProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Registers a read-only dependency property using the specified property expression defining
                the property information.
            </summary>
            <typeparam name="TProperty">
                The type of the property.
            </typeparam>
            <param name="propertyGetterExpression">
                The property getter expression in the following form: <c>obj =&gt; obj.Property</c>.
            </param>
            <returns>
                A dependency property key used to reference the dependency property later
                for operations such as setting its value programmatically or obtaining metadata.
            </returns>
            <exception cref="T:System.ArgumentException">
                <para><paramref name="propertyGetterExpression"/> is not valid.</para>
            </exception>
        </member>
        <member name="M:Omnifactotum.Wpf.WpfFactotum.IsInDesignMode">
            <summary>
                Determines whether the code is running in the context of a designer.
            </summary>
            <returns>
                <c>true</c> if the code is running in the context of a designer; otherwise, <c>false</c>.
            </returns>
        </member>
    </members>
</doc>
